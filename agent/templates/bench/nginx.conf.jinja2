
upstream {{ bench_name }}-web-server {
	server 127.0.0.1:{{ web_port }} fail_timeout=0;
}

upstream {{ bench_name}}-socketio-server {
	server 127.0.0.1:{{ socketio_port }} fail_timeout=0;
}

map $host $site_name_{{ bench_name_slug }} {

	{% for (from, to) in domains.items() -%}
		{{ from }} {{ to }};
	{% endfor %}

	default $host;
}

# server blocks
{% if sites -%}

server {
	listen 80;

	server_name
		{% for site in sites -%}
			{{ site.name }}
		{% endfor -%}
		{% for domain in domains -%}
			{{ domain }}
		{% endfor -%}
		;

	root {{ sites_directory }};

	add_header X-Frame-Options "SAMEORIGIN";
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

	location /assets {
		try_files $uri =404;
	}

	location ~ ^/protected/(.*) {
		internal;
		try_files /$site_name_{{ bench_name_slug }}/$1 =404;
	}

	location /socket.io {
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header X-Frappe-Site-Name $site_name_{{ bench_name_slug }};
		proxy_set_header Origin $scheme://$http_host;
		proxy_set_header Host $host;

		proxy_pass http://{{ bench_name }}-socketio-server;
	}

	location / {

		rewrite ^(.+)/$ $1 permanent;
		rewrite ^(.+)/index\.html$ $1 permanent;
		rewrite ^(.+)\.html$ $1 permanent;

		location ~ ^/files/.*.(htm|html|svg|xml) {
			add_header Content-disposition "attachment";
			try_files /$site_name_{{ bench_name_slug }}/public/$uri @webserver;
		}

		try_files /$site_name_{{ bench_name_slug }}/public/$uri @webserver;
	}

	location @webserver {
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Frappe-Site-Name $site_name_{{ bench_name_slug }};
		proxy_set_header Host $host;
		proxy_set_header X-Use-X-Accel-Redirect True;
		proxy_read_timeout {{ http_timeout }};
		proxy_redirect off;

		proxy_pass  http://{{ bench_name }}-web-server;
	}

	# optimizations
	sendfile on;
	keepalive_timeout 15;
	client_max_body_size 50m;
	client_body_buffer_size 16K;
	client_header_buffer_size 1k;

	# enable gzip compresion
	# based on https://mattstauffer.co/blog/enabling-gzip-on-nginx-servers-including-laravel-forge
	gzip on;
	gzip_http_version 1.1;
	gzip_comp_level 5;
	gzip_min_length 256;
	gzip_proxied any;
	gzip_vary on;
	gzip_types
		application/atom+xml
		application/javascript
		application/json
		application/rss+xml
		application/vnd.ms-fontobject
		application/x-font-ttf
		application/font-woff
		application/x-web-app-manifest+json
		application/xhtml+xml
		application/xml
		font/opentype
		image/svg+xml
		image/x-icon
		text/css
		text/plain
		text/x-component
		;
		# text/html is always compressed by HttpGzipModule
}

{%- endif %}

